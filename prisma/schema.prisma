// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar(45)
  phone      String    @unique(map: "email_UNIQUE") @db.VarChar(45)
  password   String    @db.VarChar(200)
  profile    String    @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamptz
  updated_at DateTime? @updatedAt @db.Timestamptz

  rooms      RoomParticipants[]
  messages   Message[]
  unread_messages UnreadMessage[]
}

model Room {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String    @db.VarChar(45)
  created_at DateTime? @default(now()) @db.Timestamptz
  updated_at DateTime? @updatedAt @db.Timestamptz

  users      RoomParticipants[]
  messages   Message[]
}

model RoomParticipants {
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String   @db.Uuid
  room       Room     @relation(fields: [room_id], references: [id])
  room_id    String   @db.Uuid

  @@id([user_id, room_id])
}

model Message {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text       String    @db.VarChar(255)
  room_id    String    @db.Uuid
  room       Room      @relation(fields: [room_id], references: [id])
  sender_id  String    @db.Uuid
  user       User      @relation(fields: [sender_id], references: [id])
  created_at DateTime? @default(now()) @db.Timestamptz
  updated_at DateTime? @updatedAt @db.Timestamptz

  unread_messages UnreadMessage[]
}

model UnreadMessage {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  message_id String    @db.Uuid
  message    Message   @relation(fields: [message_id], references: [id])
  user_id    String    @db.Uuid
  user       User      @relation(fields: [user_id], references: [id])
  read       Boolean
  created_at DateTime? @default(now()) @db.Timestamptz
  updated_at DateTime? @updatedAt @db.Timestamptz
}